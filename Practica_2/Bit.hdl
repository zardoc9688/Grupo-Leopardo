// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/Bit.hdl
/**
 * 1-bit register:
 * If load is asserted, the register's value is set to in;
 * Otherwise, the register maintains its current value:
 * if (load(t)) out(t+1) = in(t), else out(t+1) = out(t)
 */
CHIP Bit {
    IN in, load;
    OUT out;
   

    PARTS:
    // Multiplexer: selects between the current value of the register (lout) 
    // or the new input (in), depending on the control signal (load).
    Mux(a=lout, b=in, sel=load, out=out1);

    // D-type flip-flop: stores the value selected by the multiplexer.
    // The stored value (lout) is fed back into the multiplexer for the next operation.
    DFF(in=out1, out=lout, out=out);

    //// Replace this comment with your code.
}
